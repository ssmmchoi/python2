# -*- coding: utf-8 -*-
"""
Zeros Matrix -> Sparse Matrix
문) 영행렬(zero matrix) 이용하여 희소행렬(sparse matrix) 만들기
    <조건1> 단계1과 단계2는 문장과 단어를 만드는 단계(작업이 왼성되었음)
    <조건2> 단계3 부터 문제를 해결하시오.
"""

## 단계1 : 다음 texts를 대상으로 줄 단위로 5개 문장(stances) 만들기 
texts = """우리나라 대한민국 우리나라 대한민국 만세
비아그라 정력 최고
나는 대한민국 사람
보험료 평생 보장 마감 임박
나는 홍길동"""

tokens = texts.split('\n') # 줄 단위로 토큰 생성 
tokens = texts.split('\n')
print(tokens)  # list임
'''
['우리나라 대한민국 우리나라 만세', '비아그라 정력 최고', '나는 대한민국 사람', '보험료 평생 보장 마감 임박', '나는 홍길동']
'''
# [해설] texts를 대상으로 줄 단위로 문자열을 생성하기 위해서 줄바꿈 기호('\n')를 이용한다.  


## 단계2 : 문장과 단어 만들기 
sentences = tokens
type(sentences)  # list
sentences[0]
words = []
for st in sentences : # 문장 만들기 
    for word in st.split() : # 단어 만들기  
        words.append(word)
        
        
    
print('문장 개수 =', len(sentences)) # 문장 개수 = 5
print('단어 개수 =', len(words)) # 단어 개수 = 18
# [해설] 단계1에서 생성한 tokens를 대상으로 문장(stantens)과 문장을 구성하는 단어(words) 생성




## 단계3 : 영행렬(zeros matrix) 만들기

# [설명] 단계2에서 생성한 문장 개수 만큼 행 크기, '중복되지 않은' 단어 개수 만큼 열 크기로 영행렬 생성
import numpy as np
import pandas as pd

# 중복되지 않은 단어?
w_un = pd.Series(words).unique()
w_un  # array(['우리나라', '대한민국', '만세', '비아그라', '정력', '최고', '나는', '사람', '보험료', '평생', '보장', '마감', '임박', '홍길동'], dtype=object)
len(w_un)  # 14개의 단어가 중복되지 않고 나타남.
w_un = list(w_un)

zarr = np.zeros((5,14))  # np.zeros( ( len(sentences), len(w_un) ) )
zarr

# [영행렬(5x14) 완성 결과화면] 
'''
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]
'''





## 단계4 : 데이터프레임 만들기 
# [설명] 단계3에서 만든 영행렬을 대상으로 각 열에 중복되지 않은 단어를 열 이름으로 지정
w_df = pd.DataFrame(data=zarr, columns=w_un)
w_df


# [데이터프레임(5x14) 결과화면] 
'''
   대한민국   만세   보장   최고  보험료   임박   나는   정력   마감  홍길동  비아그라   사람   평생  우리나라
0   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0  0.0  0.0   0.0
1   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0  0.0  0.0   0.0
2   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0  0.0  0.0   0.0
3   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0  0.0  0.0   0.0
4   0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0  0.0  0.0   0.0
'''






# 단계5 : 희소행렬 만들기 *********************************************************************
# [설명] 단계4에서 만든 DataFrame을 대상으로 각 문서에서 출현한 단어의 수 만큼 셀에 채우기

# 1) 5x14 = 70길이의 리스트를 만들어봐?
# for row in w_df:
#     for wd in w_df.columns :
#         cnt = 0
#         for i in range(len(sentences)) :
#             if wd.isin(sentences[i].split()) :
#                 cnt += 1
#             else : pass



# 객체 복사(깊은 복사) : 서로 다른 주소로 복사됨
sparse_max = w_df.copy()  # 이 copy()를 사용하지 않으면, 복사한 객체를 수정할 시 원본 객체까지 수정되어버림
id(sparse_max)  # 1858096897480
id(w_df)  # 1858096810568

for doc, st in enumerate(sentences) :  # 문장 위치와 문장  doc는 0 ~ 4
    for word in st.split() :  # 문장 -> 단어 분리
        sparse_max.loc[doc, word]  += 1

sparse_max



# [희소행렬(5x14) 결과화면] 
'''
   대한민국   만세   보장   최고  보험료   임박   나는   정력   마감  홍길동  비아그라   사람   평생  우리나라
0   2.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0   0.0  0.0  0.0   2.0
1   0.0  0.0  0.0  1.0  0.0  0.0  0.0  1.0  0.0  0.0   1.0  0.0  0.0   0.0
2   1.0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0   0.0  1.0  0.0   0.0
3   0.0  0.0  1.0  0.0  1.0  1.0  0.0  0.0  1.0  0.0   0.0  0.0  1.0   0.0
4   0.0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  1.0   0.0  0.0  0.0   0.0
'''
#[해설] 첫번째 문장에서 '대한민국'과 '우리나라' 단어는 2회씩 출현 


